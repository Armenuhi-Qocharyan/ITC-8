=== Title ===

Decorator Design Pattern


=== Real life example ===

Consider a case of a pizza shop. In the pizza shop they will sell few pizza varieties and they will also provide toppings in the menu. Now imagine a situation wherein if the pizza shop has to provide prices for each combination of pizza and topping. Practically each customer would want toppings of his desire and final bill-amount will be composed of the base pizzas and additionally ordered toppings. 


=== Implementation ===

We will implement toppings as decorators and pizzas will be decorated by those toppings' decorators. 
Each topping decorator would know about the pizzas that it is decorating and it's price. GetPrice() method of Topping object would return cumulative price of both pizza and the topping.


=== Execute ===

    javac *.java
    java DecoratorDesignPattern
